[
    {
        "title": null,
        "subTitle": null,
        "text": "アジャイルソフトウェア開発とは？\nアジャイル開発は、システムやソフトウェア開発におけるプロジェクト開発手法の一つです。アジャイル開発の「アジャイル」は「素早い」という意味で、従来のウォーターフォール開発などよりも素早いという意味です。\n\n「あらかじめ全工程にわたる計画を立て、それを実行する」という開発プロセスではなく、開発中に発生する様々な状況の変化に対応しながら開発を進めていく手法です。\n\nアジャイル開発では、チームを組んで「要件定義→設計→開発→テスト→リリース（運用）」といった開発工程を、1つの機能を単位とした小さいサイクルで繰り返します。このような小さいサイクルを繰り返すことで、個々の機能の開発が独立して完結するため、開発期間中の仕様変更の発生に強く、リスクを最小化させることが可能です。\n\nこの小さなサイクルの繰り返しを、アジャイル開発では「イテレーション（反復）」と呼んでいます。イテレーションは1週間から4週間ごとが一般的であり、イテレーションごとに機能をリリースすることを繰り返します。",
        "imagePath": null,
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 2
    },
    {
        "title": "アジャイルの手法",
        "subTitle": null,
        "text": null,
        "imagePath": null,
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 0
    },
    {
        "title": null,
        "subTitle": null,
        "text": null,
        "imagePath": "1597745475754.png",
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 3
    },
    {
        "title": null,
        "subTitle": null,
        "text": "また、アジャイル開発では、顧客（ステークホルダー）を含めたチーム単位で開発を進めることも特徴の1つです。\n\nチームメンバーは、設計者やテスターのように役割が決まっているわけではなく、チームで分担して1つのイテレーションを完結させていくという考え方のもと、プロジェクトが進みます。\n\n顧客や製品のユーザーは、直接的に開発チームに要望を伝えることはできませんが、レビューの際にフィードバックすることなどにより、チームに貢献します。\n\nアジャイル開発の背景にある「アジャイルソフトウェア開発宣言」\nアジャイル開発の背景となっているのが「アジャイルソフトウェア開発宣言」です。\n\n「アジャイルソフトウェア開発宣言」は、従来のソフトウェア開発手法とは異なる手法を実践していた17人のソフトウェア技術者が集まり、ユーザーのニーズ、プログラミングの手法や言語、ソフトウェアの設計などについて議論を通じ、生み出されました。\n\n「アジャイルソフトウェア開発宣言」には、アジャイルの定義と12の原則が定義されています。アジャイルソフトウェア開発宣言の内容は、以下の通りです。",
        "imagePath": null,
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 2
    },
    {
        "title": null,
        "subTitle": null,
        "text": null,
        "imagePath": "1597745813506.png",
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 3
    },
    {
        "title": null,
        "subTitle": null,
        "text": "* \t\t1. 要求の変更はたとえ開発の後期であっても歓迎します。変化を味方につけることによって、お客様の競争力を引き上げます。\n* \t\t2. 動くソフトウェアを、2-3週間から2-3ヶ月というできるだけ短い時間間隔でリリースします。\n* \t\t3. ビジネス側の人と開発者は、プロジェクトを通して日々一緒に働かなければなりません。\n* \t\t4.意欲に満ちた人々を集めてプロジェクトを構成します。環境と支援を与え仕事が無事終わるまで彼らを信頼します。\n* \t\t5.情報を伝えるもっとも効率的で効果的な方法はフェイス・トゥ・フェイスで話をすることです。\n* \t\t6.動くソフトウェアこそが進捗の最も重要な尺度です。\n* \t\t7.アジャイル･プロセスは持続可能な開発を促進します。一定のペースを継続的に維持できるようにしなければなりません。\n* \t\t8.技術的卓越性と優れた設計に対する不断の注意が機敏さを高めます。\n* \t\t9.シンプルさ（ムダなく作れる量を最大限にすること）が本質です。\n* \t\t10.最良のアーキテクチャ・要求・設計は、自己組織的なチームから生み出されます\n*             11.チームがもっと効率を高めることができるかを定期的に振り返り、それに基づいて自分たちのやり方を最適に調整します。\n",
        "imagePath": null,
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 2
    },
    {
        "title": null,
        "subTitle": null,
        "text": "従来の手法「ウォーターフォール開発」との違い\nアジャイル開発が普及する以前は、システム開発手法として「ウォーターフォール開発」が広く使われていました。\n\nウォーターフォール開発とは、システム開発の開始時に、全工程を通したプロジェクトの要件定義や設計を細かく決めてから、開発に取り掛かる方法のことです。「分析→設計→開発→テスト→保守」という一通りの工程を、すべての機能において、一斉に上から順番に実行していきます。\n\nプロダクトは、プロジェクトの立ち上げ当初に決定した仕様を忠実に実装することを想定し、その仕様を全て満たした時点で開発完了となります。\n\n\nウォーターフォール開発\n\nウォーターフォール開発は大規模なシステムの開発で使われていた技術であり、工程の変更や後戻りを想定していない手法です。そのため、開発やテストの段階で仕様や設計のミスが明らかになった場合、修正に多大なコストが必要となることが弱点でした。\n\n一方、アジャイル開発は、最初から決まった仕様を100％満たすように開発することだけを想定したものではありません。アジャイル開発では、テストを含んだイテレーションを何度も繰り返して、システム全体をブラッシュアップしながら徐々に100％に近づけていくイメージです。そのため、エンジニアだけでなく、顧客も巻き込んだチーム一体となってシステムを開発していきます。\n\nアジャイル開発では、各工程で発生した小さなエラーを修正しながら開発できるため、開発チームにあまりコストをかけることなく、少しずつプロダクトを完成に近づけることが可能です。",
        "imagePath": null,
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 2
    },
    {
        "title": null,
        "subTitle": null,
        "text": null,
        "imagePath": "1597745482097.png",
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 3
    },
    {
        "title": null,
        "subTitle": null,
        "text": "アジャイル開発の手法：エクストリーム・プログラミング（XP）\nエクストリーム・プログラミング（Extreme Programming）は、技術者を重視した開発手法です。「XP」と略されます。\n\nエクストリーム・プログラミングは、アジャイル開発の中でも、プログラマー中心の開発手法と言えます。\n\n仕様や要求の途中変更、機能追加などを想定していることが特徴です。\n\nつねに2人1組でプログラミングを行い、細かなチェックを行う「ペアプログラミング」、チーム内で共通したコード記法などを定める「コーディング規約」などのプラクティス（原則）のもと、開発を行います。\n\nアジャイル開発の手法：ユーザー機能駆動開発（FDD）\nユーザー機能駆動開発（Feature Driven Development）は、ユーザーにとっての機能価値（feature）を重視した開発手法です。\n\nあらかじめビジネスモデルを理解し、ログイン機能や購入機能といったユーザー機能を中心に計画をたて、設計や開発を行います。\n\n開発に特化した手法ではなく、プロジェクト管理の面も持ち合わせていることが特徴です。\n\nアジャイル開発の注意点\n最後に、プロジェクトにアジャイル開発を導入する際の注意点を紹介します。",
        "imagePath": null,
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 2
    },
    {
        "title": null,
        "subTitle": null,
        "text": null,
        "imagePath": "1597746384997.png",
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 3
    },
    {
        "title": null,
        "subTitle": null,
        "text": "アジャイル開発の主流：スクラム\nスクラム（Scrum）とは、チーム一体となってシステム開発を行うフレームワークのことです。ラグビーのスクラムが語源とされています。\n\n開発チームの作業とプロダクトに責任を持つ「プロダクトオーナー」と、プロジェクトを円滑に進めることに責任をもつ「スクラムマスター」がチーム全体を支援し、開発チーム（3～9人程度）が実際に開発を行います。\n\nスクラムでは、以下の6つのプロセスを定義し、これらの段階的な管理と反復をしながら開発を進めます。\n\n1.デイリースクラム\n毎朝チームで集まり、チーム全体の状況や障害、問題点、その日に行う予定の作業を確認します。\n\n2.リリースプランニング（プロダクトバックログ）\nプロジェクトの立ち上げ時に、開発するプロダクトの機能の実装順序や開発期間について、チーム全体で計画を立てます。\n\n3.スプリント計画（スプリントバックログ）\n1つのイテレーション期間で、プロダクト全体からどの範囲の機能を実現させるかについて、チーム全体で計画を立てます。\n\n4.スプリント\n実際の1つのイテレーション期間の開発工程です。スプリントプロセスでは機能の追加や変更、削除は認められません。\n\n5.スプリントレビュー\n1つのイテレーション期間で完成したプロダクトのデモを行います。プロダクトがミスなく実装されており、安定して動作することを確認します。\n\n6.振り返り\n振り返りはスプリントごとに行います。各スプリントの良かったことや問題点、これから挑戦したいことなど、メンバー全員で話し合い確認します。",
        "imagePath": null,
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 2
    },
    {
        "title": null,
        "subTitle": null,
        "text": "このように、スクラムではアジャイル開発の中でもエンジニアや顧客がチームとなってプロジェクトを遂行することに重点を置いています。そのため、チーム内でのコミュニケーションが非常に重要となります。",
        "imagePath": null,
        "backgroundColor": null,
        "textColor": null,
        "borderColor": null,
        "borderWidth": null,
        "fontSize": null,
        "familyName": null,
        "type": 2
    }
]